version: "3.8"

services:
  twp:
    build: .
    env_file:
      - .env
    ports:
      - "${TWP_PORT}:${TWP_PORT}"
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
  postgres:
    image: postgres:16
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - ./db/migrations:/migrations
    command: -path=/migrations -database=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable up

  minio:
    image: quay.io/minio/minio:RELEASE.2023-12-02T10-51-33Z
    env_file:
      - .env
    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    volumes:
      - minio-data:/data
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:${MINIO_CONSOLE_PORT}/minio/health/live || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c "/usr/bin/mc alias set myminio http://minio:${MINIO_API_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc admin user svcacct add  myminio ${MINIO_ROOT_USER} --access-key ${MINIO_ACCESS_KEY} --secret-key ${MINIO_SECRET_KEY};
      /usr/bin/mc mb myminio/${MINIO_BUCKET_NAME};"

volumes:
  postgres-data:
  minio-data:
