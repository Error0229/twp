{
    "swagger": "2.0",
    "info": {
        "description": "twp server api.",
        "title": "twp API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.o"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/admin/coupon": {
            "get": {
                "description": "Get all global coupons .",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Coupon"
                ],
                "summary": "Admin Get Coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetGlobalCouponsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add global coupon.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Coupon"
                ],
                "summary": "Admin Add Coupon",
                "parameters": [
                    {
                        "description": "Coupon",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.AddCouponParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.AddCouponRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/coupon/{id}": {
            "get": {
                "description": "Get coupon details.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Coupon",
                    "Shop"
                ],
                "summary": "Admin Get Coupon Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetGlobalCouponDetailRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete coupon (include shops').",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Coupon"
                ],
                "summary": "Admin Delete Coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit global coupon. All the coupon properties are required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Coupon"
                ],
                "summary": "Admin Edit Coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Coupon",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.PrettierCoupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.EditCouponRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/report": {
            "get": {
                "description": "Get site report (top 3 sellers and total amount).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "Report"
                ],
                "summary": "Admin Get Site Report",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start year/month",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/admin.adminReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "Get all user information. Include user's icon, name, email, created time and role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "User"
                ],
                "summary": "Admin Get User",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetUsersRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/admin/user/{username}": {
            "delete": {
                "description": "Disable user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin",
                    "User"
                ],
                "summary": "Admin Disable User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart": {
            "get": {
                "description": "Get all Carts of the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart"
                ],
                "summary": "Buyer Get Cart",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/buyer.Cart"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart/product/{id}": {
            "post": {
                "description": "Add product to cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart"
                ],
                "summary": "Buyer Add Product To Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Quantity",
                        "name": "quantity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buyer.ProductQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product quantity in cart",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart/{cart_id}/coupon/{coupon_id}": {
            "post": {
                "description": "Add coupon to cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart",
                    "Coupon"
                ],
                "summary": "Buyer Add Coupon To Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "coupon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete coupon In cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart",
                    "Coupon"
                ],
                "summary": "Buyer Delete Coupon In Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "coupon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart/{cart_id}/product/{product_id}": {
            "delete": {
                "description": "Delete product from cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart"
                ],
                "summary": "Buyer Delete Product From Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit product quantity in cart (The product must be in the cart)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart"
                ],
                "summary": "Buyer Edit Product In Cart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "cart_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Quantity",
                        "name": "quantity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buyer.ProductQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart/{id}/checkout": {
            "get": {
                "description": "Get all checkout data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Checkout"
                ],
                "summary": "Buyer Get Checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buyer.checkout"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Checkout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Checkout"
                ],
                "summary": "Buyer Checkout",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment",
                        "name": "payment_method",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buyer.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/cart/{id}/coupon": {
            "get": {
                "description": "Buyer get usable coupon of cart/shop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Cart",
                    "Coupon"
                ],
                "summary": "Buyer Get usable coupon of cart/shop",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetSortedUsableCouponsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/order": {
            "get": {
                "description": "Get all order history of the user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Order"
                ],
                "summary": "Buyer Get Order History",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetOrderHistoryRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/buyer/order/{id}": {
            "get": {
                "description": "Get specific order detail",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Order"
                ],
                "summary": "Buyer Get Order Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buyer.OrderDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Buyer Update order status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyer",
                    "Order"
                ],
                "summary": "Buyer Update order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/buyer.OrderStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/discover": {
            "get": {
                "description": "Get discover content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discover",
                    "Product"
                ],
                "summary": "Get Discover",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetRandomProductsRow"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Get news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get News",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.NewsInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/news/{id}": {
            "get": {
                "description": "Get details of a specific news item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "News"
                ],
                "summary": "Get News Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "News ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.News"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/oauth/logout": {
            "post": {
                "description": "Logout the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/popular": {
            "get": {
                "description": "Get discover content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Discover",
                    "Product"
                ],
                "summary": "Get Popular products and Local products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/general.popular"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "Get product information with product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/general.productInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search for products and shops",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search for Products and Shops",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "price lower bound",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "price upper bound",
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "stock lower bound",
                        "name": "minStock",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "stock upper bound",
                        "name": "maxStock",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "has coupon",
                        "name": "haveCoupon",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "price",
                            "stock",
                            "sales",
                            "relevancy"
                        ],
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "sorting order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/general.PrettierSearchResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/search/shop": {
            "get": {
                "description": "Search for shops by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search",
                    "Shop"
                ],
                "summary": "Search for Shops by Name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search Name",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/general.PrettierShopSearchResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/coupon": {
            "get": {
                "description": "Get all coupons for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller get shop coupon",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.SellerGetCouponRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add coupon for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller add coupon",
                "parameters": [
                    {
                        "description": "coupon",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.InsertCouponParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerInsertCouponRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/coupon/{id}": {
            "get": {
                "description": "Get coupon detail by ID for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller get coupon detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seller.CouponDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete coupon for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller delete coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit coupon for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller edit coupon",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Coupon ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "coupon",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.InsertCouponParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerUpdateCouponInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/coupon/{id}/tag": {
            "post": {
                "description": "Add tag on coupon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon",
                    "Tag"
                ],
                "summary": "Seller add coupon tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "coupon id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add tag id",
                        "name": "tag_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.GetTagParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.CouponTag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete coupon for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon",
                    "Tag"
                ],
                "summary": "Seller delete coupon tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "coupon id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add tag id",
                        "name": "tag_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.GetTagParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/info": {
            "get": {
                "description": "Get shop info, includes user picture, name, description.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop"
                ],
                "summary": "Seller get shop info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerGetInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit shop name, description, visibility.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop"
                ],
                "summary": "Seller edit shop info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "update shop name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image file",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "update description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "update enabled status",
                        "name": "enabled",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerUpdateInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/order": {
            "get": {
                "description": "Get all orders for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Order"
                ],
                "summary": "Seller get order",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.SellerGetOrderRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/order/{id}": {
            "get": {
                "description": "Get order detail by ID for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Order"
                ],
                "summary": "Seller get order detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seller.OrderDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "seller update orders status.",
                "tags": [
                    "Seller",
                    "Shop",
                    "Order"
                ],
                "summary": "Seller update order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "order current status",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.OrderUpdateStatusParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerUpdateOrderStatusRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/product": {
            "get": {
                "description": "seller get product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product"
                ],
                "summary": "Seller get product",
                "parameters": [
                    {
                        "minimum": 0,
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.SellerProductListRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add product for shop.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product"
                ],
                "summary": "Seller add product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of product",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "description of product",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "expire date",
                        "name": "expire_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "stock",
                        "name": "stock",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "enabled",
                        "name": "enabled",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "init tags",
                        "name": "tags",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerInsertProductRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/product/{id}": {
            "get": {
                "description": "Delete product for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product"
                ],
                "summary": "Seller get product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seller.ProductDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product"
                ],
                "summary": "Seller delete product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit product for shop.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product"
                ],
                "summary": "Seller edit product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of product",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "description of product",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image file",
                        "name": "image",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "expire date",
                        "name": "expire_date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "stock",
                        "name": "stock",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "enabled",
                        "name": "enabled",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerUpdateProductInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/product/{id}/tag": {
            "post": {
                "description": "Add tag on product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Product",
                    "Tag"
                ],
                "summary": "Seller add product tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add tag id",
                        "name": "tag_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.TagParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.ProductTag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete product for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Coupon"
                ],
                "summary": "Seller delete product tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "product id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add tag id",
                        "name": "tag_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.GetTagParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/report": {
            "get": {
                "description": "Get report detail by year and month for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Report"
                ],
                "summary": "Seller get report detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "time",
                        "name": "time",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/seller.ReportDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/seller/tag": {
            "get": {
                "description": "Get all available tags for shop.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Tag"
                ],
                "summary": "Seller get available tag",
                "parameters": [
                    {
                        "minLength": 1,
                        "type": "string",
                        "description": "search tag name start with",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.SellerSearchTagRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Add tag for shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Seller",
                    "Shop",
                    "Tag"
                ],
                "summary": "Seller add tag",
                "parameters": [
                    {
                        "description": "insert tag",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/seller.TagParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.SellerInsertTagRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/shop/{seller_name}": {
            "get": {
                "description": "Get shop information with seller username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "summary": "Get Shop Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "seller username",
                        "name": "seller_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/general.shopInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/shop/{seller_name}/coupon": {
            "get": {
                "description": "Get coupons for a shop with seller username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop",
                    "Coupon"
                ],
                "summary": "Get Shop Coupons",
                "parameters": [
                    {
                        "type": "string",
                        "description": "seller username",
                        "name": "seller_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.GetShopCouponsRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/shop/{seller_name}/coupon/{id}": {
            "get": {
                "description": "Get coupon detail for a shop with seller username and coupon id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop",
                    "Coupon"
                ],
                "summary": "Get Shop coupon detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "seller username",
                        "name": "seller_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "coupon id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/general.couponInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/shop/{seller_name}/search": {
            "get": {
                "description": "Search products within a shop by seller username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop",
                    "Product",
                    "Search"
                ],
                "summary": "Search Shop Products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seller username",
                        "name": "seller_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "price lower bound",
                        "name": "minPrice",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "price upper bound",
                        "name": "maxPrice",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "stock lower bound",
                        "name": "minStock",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "stock upper bound",
                        "name": "maxStock",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "has coupon",
                        "name": "haveCoupon",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "price",
                            "stock",
                            "sales",
                            "relevancy"
                        ],
                        "type": "string",
                        "description": "sort by",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "sorting order",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Begin index",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "maximum": 20,
                        "type": "integer",
                        "default": 10,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/general.PrettierProductSearchResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "signup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Customer signup",
                "parameters": [
                    {
                        "description": "something",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.signupParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/tag/{id}": {
            "get": {
                "description": "Get information about a tag by tag ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Get Tag Info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.GetTagInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "Get user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Get Info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserGetInfoRow"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Edit user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Edit Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of coupon",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user address",
                        "name": "address",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserUpdateInfoRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/security/credit_card": {
            "get": {
                "description": "Get all credit cards of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditCard"
                ],
                "summary": "User Get Credit Card",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Delete a credit card by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreditCard"
                ],
                "summary": "User Delete Credit Card",
                "parameters": [
                    {
                        "description": "Credit Card",
                        "name": "credit_card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/user/security/password": {
            "post": {
                "description": "Change user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User Edit Password",
                "parameters": [
                    {
                        "description": "password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.updatePasswordParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.UserUpdatePasswordRow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.PrettierCoupon": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "end_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "admin.adminReport": {
            "type": "object",
            "properties": {
                "month": {
                    "type": "integer"
                },
                "sellers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetTopSellerRow"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "auth.signupParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "secretp@ssword123"
                },
                "username": {
                    "type": "string",
                    "example": "john"
                }
            }
        },
        "big.Int": {
            "type": "object"
        },
        "buyer.Cart": {
            "type": "object",
            "properties": {
                "cartInfo": {
                    "$ref": "#/definitions/db.GetCartRow"
                },
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetSortedCouponsFromCartRow"
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetProductFromCartOrderByPriceDescRow"
                    }
                }
            }
        },
        "buyer.OrderDetail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetOrderDetailRow"
                    }
                },
                "info": {
                    "$ref": "#/definitions/db.GetOrderInfoRow"
                }
            }
        },
        "buyer.OrderStatus": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                }
            }
        },
        "buyer.PaymentMethod": {
            "type": "object",
            "properties": {
                "credit_card": {
                    "type": "object"
                }
            }
        },
        "buyer.ProductQuantity": {
            "type": "object",
            "properties": {
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "buyer.checkout": {
            "type": "object",
            "properties": {
                "coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/buyer.couponDiscount"
                    }
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "shipment": {
                    "type": "integer"
                },
                "subtotal": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_discount": {
                    "type": "integer"
                }
            }
        },
        "buyer.couponDiscount": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "discount_value": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "common.News": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "common.NewsInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.AddCouponParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.AddCouponRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.CouponScope": {
            "type": "string",
            "enum": [
                "global",
                "shop"
            ],
            "x-enum-varnames": [
                "CouponScopeGlobal",
                "CouponScopeShop"
            ]
        },
        "db.CouponTag": {
            "type": "object",
            "properties": {
                "coupon_id": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "db.CouponType": {
            "type": "string",
            "enum": [
                "percentage",
                "fixed",
                "shipping"
            ],
            "x-enum-varnames": [
                "CouponTypePercentage",
                "CouponTypeFixed",
                "CouponTypeShipping"
            ]
        },
        "db.EditCouponRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetCartRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "seller_name": {
                    "type": "string"
                },
                "shop_image_url": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                }
            }
        },
        "db.GetCouponTagsRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.GetGlobalCouponDetailRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetGlobalCouponsRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetOrderDetailRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "db.GetOrderHistoryRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "shipment": {
                    "type": "integer"
                },
                "shop_image_url": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer"
                }
            }
        },
        "db.GetOrderInfoRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "shipment": {
                    "type": "integer"
                },
                "shop_image_url": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "total_price": {
                    "type": "integer"
                }
            }
        },
        "db.GetProductFromCartOrderByPriceDescRow": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.GetProductTagsRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.GetProductsFromNearByShopRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                }
            }
        },
        "db.GetProductsFromPopularShopRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                }
            }
        },
        "db.GetRandomProductsRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                }
            }
        },
        "db.GetShopCouponsRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetShopInfoRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                }
            }
        },
        "db.GetShopProductsRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.GetSortedCouponsFromCartRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetSortedUsableCouponsRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.GetTagInfoRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.GetTopSellerRow": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                },
                "total_sales": {
                    "type": "integer"
                }
            }
        },
        "db.GetUsersRow": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "credit_card": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "email": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "icon_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/db.RoleType"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.OrderStatus": {
            "type": "string",
            "enum": [
                "paid",
                "shipped",
                "delivered",
                "cancelled",
                "finished"
            ],
            "x-enum-varnames": [
                "OrderStatusPaid",
                "OrderStatusShipped",
                "OrderStatusDelivered",
                "OrderStatusCancelled",
                "OrderStatusFinished"
            ]
        },
        "db.ProductTag": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "db.RoleType": {
            "type": "string",
            "enum": [
                "admin",
                "customer"
            ],
            "x-enum-varnames": [
                "RoleTypeAdmin",
                "RoleTypeCustomer"
            ]
        },
        "db.SellerBestSellProductRow": {
            "type": "object",
            "properties": {
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order_count": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "total_quantity": {
                    "type": "integer"
                },
                "total_sell": {
                    "$ref": "#/definitions/pgtype.Numeric"
                }
            }
        },
        "db.SellerGetCouponDetailRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.SellerGetCouponRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.SellerGetCouponTagRow": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "db.SellerGetInfoRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.SellerGetOrderDetailRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "db.SellerGetOrderHistoryRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "shipment": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "total_price": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_image_url": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "db.SellerGetOrderRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "shipment": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "total_price": {
                    "type": "integer"
                },
                "user_image_url": {
                    "type": "string"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "db.SellerGetProductDetailRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.SellerGetProductTagRow": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "db.SellerInsertCouponRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.SellerInsertProductRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "edit_date": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.SellerInsertTagRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.SellerProductListRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.SellerReportRow": {
            "type": "object",
            "properties": {
                "order_count": {
                    "type": "integer"
                },
                "total_income": {
                    "$ref": "#/definitions/pgtype.Numeric"
                }
            }
        },
        "db.SellerSearchTagRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.SellerUpdateCouponInfoRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "db.SellerUpdateInfoRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.SellerUpdateOrderStatusRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "shipment": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "total_price": {
                    "type": "integer"
                }
            }
        },
        "db.SellerUpdateProductInfoRow": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "edit_date": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sales": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "db.UserGetInfoRow": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.UserUpdateInfoRow": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.UserUpdatePasswordRow": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "general.PrettierProductSearchResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "general.PrettierSearchResult": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/general.PrettierProductSearchResult"
                    }
                },
                "shops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/general.PrettierProductSearchResult"
                    }
                }
            }
        },
        "general.PrettierShopSearchResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                }
            }
        },
        "general.couponInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scope": {
                    "$ref": "#/definitions/db.CouponScope"
                },
                "start_date": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetCouponTagsRow"
                    }
                },
                "type": {
                    "$ref": "#/definitions/db.CouponType"
                }
            }
        },
        "general.popular": {
            "type": "object",
            "properties": {
                "local_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetProductsFromNearByShopRow"
                    }
                },
                "popular_products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetProductsFromPopularShopRow"
                    }
                }
            }
        },
        "general.productInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_image_url": {
                    "type": "string"
                },
                "sales": {
                    "type": "integer"
                },
                "seller_name": {
                    "type": "string"
                },
                "shop_image_url": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetProductTagsRow"
                    }
                }
            }
        },
        "general.shopInfo": {
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/db.GetShopInfoRow"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.GetShopProductsRow"
                    }
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Int4": {
            "type": "object",
            "properties": {
                "int32": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Numeric": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "integer"
                },
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "int": {
                    "$ref": "#/definitions/big.Int"
                },
                "naN": {
                    "type": "boolean"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "seller.CouponDetail": {
            "type": "object",
            "properties": {
                "coupon_info": {
                    "$ref": "#/definitions/db.SellerGetCouponDetailRow"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SellerGetCouponTagRow"
                    }
                }
            }
        },
        "seller.GetTagParams": {
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "integer"
                }
            }
        },
        "seller.InsertCouponParams": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "some description"
                },
                "discount": {
                    "type": "number",
                    "example": 19.99
                },
                "expire_date": {
                    "type": "string",
                    "example": "2024-11-12T07:20:50.52Z"
                },
                "name": {
                    "type": "string",
                    "example": "product name"
                },
                "start_date": {
                    "type": "string",
                    "example": "2024-10-12T07:20:50.52Z"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        10001,
                        10002
                    ]
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/db.CouponType"
                        }
                    ],
                    "example": "fixed"
                }
            }
        },
        "seller.OrderDetail": {
            "type": "object",
            "properties": {
                "order_info": {
                    "$ref": "#/definitions/db.SellerGetOrderHistoryRow"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SellerGetOrderDetailRow"
                    }
                }
            }
        },
        "seller.OrderUpdateStatusParams": {
            "type": "object",
            "properties": {
                "current_status": {
                    "$ref": "#/definitions/db.OrderStatus"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "seller.ProductDetail": {
            "type": "object",
            "properties": {
                "product_info": {
                    "$ref": "#/definitions/db.SellerGetProductDetailRow"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SellerGetProductTagRow"
                    }
                }
            }
        },
        "seller.ReportDetail": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SellerBestSellProductRow"
                    }
                },
                "report": {
                    "$ref": "#/definitions/db.SellerReportRow"
                }
            }
        },
        "seller.TagParams": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "user.updatePasswordParams": {
            "type": "object",
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}